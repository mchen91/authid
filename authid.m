% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
% Created Wed Apr 02 07:18:12 EDT 2014
%
% This script assumes these variables are defined:
%
%   inputs - input data.
%   targets - target data.

data = csvread('~/Documents/authid/data.txt');

% normalize data to between 0 and 1
normalizer = max(data(:));
bias = min(data(:));
inputs = (transpose(data(:,2:end)) - bias) / (normalizer - bias);
targets = full(ind2vec(transpose(data(:,1))));

% Create a Pattern Recognition Network
hiddenLayerSize = 7;
net = patternnet(hiddenLayerSize);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 75/100;
net.divideParam.valRatio = 0/100;
net.divideParam.testRatio = 25/100;

% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotconfusion(targets,outputs)
%figure, plotroc(targets,outputs)
%figure, ploterrhist(errors)

% Classify new data
a = [0.00666666666667,0.0,0.00166666666667,0.005,0.0283333333333,0.005,0.00333333333333,0.005,0.00166666666667,0.00333333333333,0.0,0.0116666666667,0.005,0.00333333333333,0.0,0.01,0.01,0.005,0.00166666666667,0.00166666666667,0.00166666666667,0.005,0.0,0.00166666666667,0.0133333333333,0.00166666666667,0.0,0.00833333333333,0.005,0.00833333333333,0.00333333333333,0.00666666666667,0.00166666666667,0.00833333333333,0.01,0.00333333333333,0.00333333333333,0.00833333333333,0.005,0.005,0.00166666666667,0.0116666666667,0.00166666666667,0.00666666666667,0.005,0.005,0.00166666666667,0.00166666666667,0.0,0.00666666666667,0.0,0.00333333333333,0.0]';
b = [0.00343053173242,0.00171526586621,0.00343053173242,0.00171526586621,0.0360205831904,0.00171526586621,0.0,0.00514579759863,0.00686106346484,0.0,0.00686106346484,0.00514579759863,0.00171526586621,0.00343053173242,0.00514579759863,0.00857632933105,0.00343053173242,0.0102915951973,0.00686106346484,0.00343053173242,0.0,0.00171526586621,0.00686106346484,0.00343053173242,0.0102915951973,0.00514579759863,0.00171526586621,0.0102915951973,0.00857632933105,0.0,0.00514579759863,0.00343053173242,0.00514579759863,0.0120068610635,0.0,0.00343053173242,0.00343053173242,0.0137221269297,0.00686106346484,0.00514579759863,0.00686106346484,0.00514579759863,0.0,0.00343053173242,0.00514579759863,0.0102915951973,0.00171526586621,0.00686106346484,0.0,0.00343053173242,0.0,0.0137221269297,0.00686106346484]';
c = [0.00340715502555,0.00170357751278,0.00170357751278,0.00851788756388,0.0170357751278,0.00170357751278,0.00681431005111,0.00340715502555,0.00170357751278,0.00851788756388,0.00511073253833,0.0,0.00851788756388,0.00340715502555,0.00511073253833,0.00681431005111,0.00340715502555,0.00170357751278,0.00170357751278,0.00511073253833,0.0119250425894,0.00511073253833,0.00511073253833,0.0136286201022,0.00681431005111,0.0,0.0119250425894,0.0,0.00511073253833,0.00681431005111,0.0,0.0,0.00851788756388,0.00511073253833,0.0,0.00340715502555,0.00170357751278,0.00851788756388,0.00511073253833,0.00340715502555,0.00340715502555,0.0,0.0119250425894,0.00681431005111,0.00681431005111,0.0,0.00851788756388,0.00340715502555,0.00170357751278,0.00511073253833,0.00170357751278,0.0136286201022,0.00340715502555]';
new_data = [a b c];

normalized_data = (new_data - bias) / (normalizer - bias);
y = sim(net, normalized_data);
[C,I] = max(y);
I
